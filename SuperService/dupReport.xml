<?xml version="1.0" encoding="utf-8"?>
<DuplicatesReport ToolsVersion="105.0.20160523.141928">
  <Statistics>
    <CodebaseCost>47109</CodebaseCost>
    <TotalDuplicatesCost>492</TotalDuplicatesCost>
    <TotalFragmentsCost>1071</TotalFragmentsCost>
  </Statistics>
  <Duplicates>
    <Duplicate Cost="118">
      <Fragment>
        <FileName>SuperService\Module\DBHelper.UpdateInsert.cs</FileName>
        <OffsetRange Start="4049" End="4362"></OffsetRange>
        <LineRange Start="86" End="91"></LineRange>
        <Text>query.AddParameter("id", $"@ref[Document_Reminder]:{Guid.NewGuid()}");
            query.AddParameter("date", DateTime.Now.ToString(DateTimeFormat));
            query.AddParameter("eventId", eventID);
            query.AddParameter("message", message);
            query.Execute();
            _db.Commit();</Text>
      </Fragment>
      <Fragment>
        <FileName>SuperService\Module\DBHelper.UpdateInsert.cs</FileName>
        <OffsetRange Start="5422" End="5735"></OffsetRange>
        <LineRange Start="114" End="119"></LineRange>
        <Text>query.AddParameter("id", $"@ref[Document_Reminder]:{Guid.NewGuid()}");
            query.AddParameter("date", DateTime.Now.ToString(DateTimeFormat));
            query.AddParameter("eventId", eventID);
            query.AddParameter("message", message);
            query.Execute();
            _db.Commit();</Text>
      </Fragment>
    </Duplicate>
    <Duplicate Cost="114">
      <Fragment>
        <FileName>SuperService\Controllers\CheckListScreen.cs</FileName>
        <OffsetRange Start="3328" End="3716"></OffsetRange>
        <LineRange Start="97" End="103"></LineRange>
        <Text>{
            _textView.Text = args.Result.Value;
            DBHelper.UpdateCheckListItem(_currentCheckListItemID,
                args.Result.Value == Translator.Translate("not_choosed") ? "" : _textView.Text);
            _textView.Refresh();
            ChangeRequiredIndicator(_lastClickedRequiredIndicatior, args.Result.Value == Translator.Translate("not_choosed"));
        }</Text>
      </Fragment>
      <Fragment>
        <FileName>SuperService\Controllers\CheckListScreen.cs</FileName>
        <OffsetRange Start="5126" End="5514"></OffsetRange>
        <LineRange Start="138" End="144"></LineRange>
        <Text>{
            _textView.Text = args.Result.Value;
            DBHelper.UpdateCheckListItem(_currentCheckListItemID,
                args.Result.Value == Translator.Translate("not_choosed") ? "" : _textView.Text);
            ChangeRequiredIndicator(_lastClickedRequiredIndicatior, args.Result.Value == Translator.Translate("not_choosed"));
            _textView.Refresh();
        }</Text>
      </Fragment>
    </Duplicate>
    <Duplicate Cost="87">
      <Fragment>
        <FileName>SuperService\Controllers\COCScreen.cs</FileName>
        <OffsetRange Start="3652" End="3997"></OffsetRange>
        <LineRange Start="117" End="124"></LineRange>
        <Text>internal void OpenDeleteButton_OnClick(object sender, EventArgs e)
        {
            //TODO: Обходной путь получения парента. Внимание!!!!! .
            var vl = (VerticalLayout) sender;
            var hl = (IHorizontalLayout3) vl.Parent;
            var shl = (ISwipeHorizontalLayout3) hl.Parent;
            ++shl.Index;
        }</Text>
      </Fragment>
      <Fragment>
        <FileName>SuperService\Controllers\MaterialsRequestScreen.cs</FileName>
        <OffsetRange Start="6623" End="6898"></OffsetRange>
        <LineRange Start="180" End="186"></LineRange>
        <Text>internal void OpenDeleteButton_OnClick(object sender, EventArgs e)
        {
            var vl = (VerticalLayout) sender;
            var hl = (IHorizontalLayout3) vl.Parent;
            var shl = (ISwipeHorizontalLayout3) hl.Parent;
            ++shl.Index;
        }</Text>
      </Fragment>
    </Duplicate>
    <Duplicate Cost="87">
      <Fragment>
        <FileName>SuperService\Controllers\CheckListScreen.cs</FileName>
        <OffsetRange Start="5627" End="5943"></OffsetRange>
        <LineRange Start="148" End="154"></LineRange>
        <Text>{
            _editText = (EditText)sender;
            _currentCheckListItemID = ((EditText)sender).Id;

            DBHelper.UpdateCheckListItem(_currentCheckListItemID, _editText.Text);
            ChangeRequiredIndicator(_lastClickedRequiredIndicatior, string.IsNullOrWhiteSpace(_editText.Text));
        }</Text>
      </Fragment>
      <Fragment>
        <FileName>SuperService\Controllers\CheckListScreen.cs</FileName>
        <OffsetRange Start="6052" End="6932"></OffsetRange>
        <LineRange Start="158" End="180"></LineRange>
        <Text>{
            _editText = (EditText)sender;
            _currentCheckListItemID = ((EditText)sender).Id;

            //var vl1 = (IHorizontalLayout3)_editText.Parent;
            //var hl = (IVerticalLayout3)vl1.Parent;
            //var vl2 = (IHorizontalLayout3)hl.Parent;
            //var vltarget = (IVerticalLayout3)vl2.Controls[0];

            //if (_editText.Text.Length &gt; 0)
            //{
            //    vltarget.CssClass = "VLRequiredDone";
            //    vltarget.Refresh();
            //}
            //else
            //{
            //    vltarget.CssClass = "VLRequired";
            //    vltarget.Refresh();
            //}

            DBHelper.UpdateCheckListItem(_currentCheckListItemID, _editText.Text);
            ChangeRequiredIndicator(_lastClickedRequiredIndicatior, string.IsNullOrWhiteSpace(_editText.Text));
        }</Text>
      </Fragment>
      <Fragment>
        <FileName>SuperService\Controllers\CheckListScreen.cs</FileName>
        <OffsetRange Start="7042" End="8614"></OffsetRange>
        <LineRange Start="184" End="219"></LineRange>
        <Text>{
            _editText = (EditText)sender;
            _currentCheckListItemID = ((EditText)sender).Id;

            //var vl = (IVerticalLayout3)_editText.Parent;
            //var hl = (IHorizontalLayout3)vl.Parent;
            //var vltarget = (IVerticalLayout3) hl.Controls[0];

            //DConsole.WriteLine("CSS " + vltarget.CssClass.ToString());

            //vltarget.CssClass = "VLRequiredDone";
            //DConsole.WriteLine("1");
            //vltarget.Refresh();

            //DConsole.WriteLine("CSS " + vltarget.CssClass.ToString());

            //if (vltarget.CssClass == "VLRequiredDone" || vltarget.CssClass == "VLRequired")
            //{
            //    DConsole.WriteLine("1");
            //    if (_editText.Text.Length &gt; 0)
            //    {
            //        DConsole.WriteLine("2");
            //        vltarget.CssClass = "VLRequiredDone";
            //        vltarget.Refresh();
            //    }
            //    else
            //    {
            //        DConsole.WriteLine("3");
            //        vltarget.CssClass = "VLRequired";
            //        vltarget.Refresh();
            //    }
            //}
            // TODO: Непонятное поведение Refresh(), из-за чего не можем оперативно сменить индикатор важности. Работает на android 4, не работает на android 6
            DBHelper.UpdateCheckListItem(_currentCheckListItemID, _editText.Text);
            ChangeRequiredIndicator(_lastClickedRequiredIndicatior, string.IsNullOrWhiteSpace(_editText.Text));
        }</Text>
      </Fragment>
    </Duplicate>
    <Duplicate Cost="86">
      <Fragment>
        <FileName>SuperService\Module\DBHelper.UpdateInsert.cs</FileName>
        <OffsetRange Start="1024" End="1243"></OffsetRange>
        <LineRange Start="24" End="28"></LineRange>
        <Text>DConsole.WriteLine($"{dateTime}");
            query.AddParameter("dateTime", dateTime.ToString(DateTimeFormat));
            query.AddParameter("id", eventId);
            query.Execute();
            _db.Commit();</Text>
      </Fragment>
      <Fragment>
        <FileName>SuperService\Module\DBHelper.UpdateInsert.cs</FileName>
        <OffsetRange Start="2049" End="2268"></OffsetRange>
        <LineRange Start="44" End="48"></LineRange>
        <Text>DConsole.WriteLine($"{dateTime}");
            query.AddParameter("dateTime", dateTime.ToString(DateTimeFormat));
            query.AddParameter("id", eventId);
            query.Execute();
            _db.Commit();</Text>
      </Fragment>
    </Duplicate>
  </Duplicates>
</DuplicatesReport>