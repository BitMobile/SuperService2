<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="D:\Coding\SuperService2\SDK\BitMobileSDK\BitMobileSDK.exe" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="BitMobileSDK.CodeGeneration.Model" #>
<#@ include file="ModelHelper.ttinclude"#>
<#
    var path = Host.ResolvePath(".");
    var manager = Manager.Create(Host, GenerationEnvironment);
    var ns = "Test";

    String fileName = Host.ResolvePath("metadata.xml");

    Config cf = new ModelFactory().GetConfig(fileName);
    var entities = cf.Entities;
    foreach (Entity entity in entities)
    {
        if (!Directory.Exists($@"{path}\..\Entities\{entity.Schema}"))
            Directory.CreateDirectory($@"{path}\..\Entities\{entity.Schema}");
        manager.StartNewFile($@"{path}\..\Entities\{entity.Schema}\{entity.Name}.cs");
        #>
using System;
using BitMobile.DbEngine;

namespace <#= ns #>.Entities.<#= entity.Schema #>
{
    public class <#= entity.Name #> : DbEntity
    {
<#      foreach (Field f in entity.Fields)
{
    #>
        public <#= DataTypeToType(f.DataType) #> <#= f.Name #> { get; set; }
<# } #>
<# if (entity.Schema != "Enum")
{#>        
        public <#= entity.Name #>(DbRef id = null)
        {
            Id = id ?? DbRef.CreateInstance("<#= $"{entity.Schema}_{entity.Name}" #>", Guid.NewGuid());
        }
<#}#>
<# if (entity.Schema == "Enum") 
{#>

        public <#= entity.Name#>Enum GetEnum() 
        {
            switch(Id.Guid.ToString())
            {
<# foreach (var constant in cf.Constants[entity.Name])
{#>
                case "<#= constant.Id.ToString() #>": 
                    return <#= entity.Name #>Enum.<#= constant.Name #>;
<#}#>
            }
            return default(<#= entity.Name #>Enum);
<#
#>
        }
<#}#>
<# foreach (var tabularSection in entity.TabularSections)
{#>
        public class <#= tabularSection.Name #> : DbEntity
        {
<# foreach (var field in tabularSection.Fields)
{#>
            public <#= DataTypeToType(field.DataType) #> <#= field.Name #> { get; set; }
<#}#>

            public <#= tabularSection.Name #> (DbRef id = null)
            {
                Id = id ?? DbRef.CreateInstance("<#= entity.Schema #>_<#= entity.Name #>_<#= tabularSection.Name #>", Guid.NewGuid());					
            }
        }
<#}#>

    }
<# if (entity.Schema == "Enum")
{ #>

    public enum <#= entity.Name #>Enum
    {
<# foreach (var constant in cf.Constants[entity.Name])
{ #>
        <#= constant.Name #>,
<# } #>
    } 
<# } #>
}
    <#
    }
#>
<# manager.Process(true); #>
<#+

    private string DataTypeToType(string s)
    {
        switch (s)
        {
            case "Guid":
                return "DbRef";
            case "String":
                return "string";
            default:
                return s;
        }
    }
#>