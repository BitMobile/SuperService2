<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="..\SDK\BitMobileSDK\BitMobileSDK.exe" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="BitMobileSDK.CodeGeneration.Model" #>
<#@ include file="ModelHelper.ttinclude"#>
<#
    var manager = Manager.Create(Host, GenerationEnvironment);
    var ns = "Test";
    
    String fileName = Host.ResolvePath("metadata.xml");

    Config cf = new ModelFactory().GetConfig(fileName);
    var entities = cf.Entities;
    foreach (Entity entity in entities)
    {
        manager.StartNewFile($@"..\Entities\{entity.Schema}\{entity.Name}.cs");
        #>
using System;
using BitMobile.DbEngine;

namespace <#= ns #>.Model.<#= entity.Schema #>
{
    public class <#= entity.Name #> : DbEntity
    {
<#      foreach (Field f in entity.Fields)
        {
        #>
        public <#= DataTypeToType(f.DataType) #> <#= f.Name #> { get; set; }
<#      }#>
        
        public <#= entity.Name #>(DbRef Id = null)
        {
            this.Id = Id ?? DbRef.CreateInstance("<#= $"{entity.Schema}_{entity.Name}"#>", Guid.NewGuid());
        }
    }
}
    <#
    }
#>
<# manager.Process(true); #>
<#+

    string DataTypeToType(string s)
    {
        switch (s)
        {
            case "Guid":
                return "DbRef";
            case "String":
                return "string";
            default:
                return s;
        }
    }

#>